<template>

	<view class="content">
		<view class="cardtop" style="width: 100%; height: 200upx; ">
			<view class="card-content-view" style="background-color: #FFFFFF;margin-left: 20rpx;margin-right: 20rpx;height: 200rpx;border-radius: 10rpx;box-shadow: 0rpx 8rpx 8rpx #f4f9ff; margin-top: 20upx;">
				<view class="uni-flex uni-column" style="width: 100%; height: 200rpx;">
					<text class="card-text">109路</text>
					<view class="uni-flex uni-row" style="margin-left: 20upx;">
						<text class="card-textblack"> 车辆 </text>
						<text class="card-textblack"> 20 </text>
						<text class="card-textblack"> 配车</text>
						<text class="card-textblack"> 40</text>
						<text class="card-textblack"> 在线</text>
						<text class="card-textblack"> 40</text>
						<text class="card-textblack"> 运行</text>
						<text class="card-textblack"> 40</text>
					</view>

					<view class="uni-flex uni-row" style="margin-left: 20upx; ">
						<image class="imgherd" src="/static/images/red.png"> </image>
						<text class="card-textblack"> 未发车 </text>
						<image class="imgherd" src="/static/images/green.png"> </image>
						<text class="card-textblack"> 已发车</text>
						<image class="imgherd" src="/static/images/blue.png"> </image>
						<text class="card-textblack"> 已确认</text>

					</view>
				</view>

			</view>
		</view>




		<view style="margin-top: 20upx; width: 30%; margin-left: 20upx;">
			<zzx-tabs :items="items" :current="current" @clickItem="onClickItem" ref="mytabs">
			</zzx-tabs>

		</view>
		<view style="color:#999999;font-size: 24upx;height: 260upx;">
			<view v-show="current === 0" style="background-color: #ffffff;">
				<view class="card-content-view" style="margin-left: 20rpx;margin-right: 20rpx;height: 200rpx;border-radius: 10rpx;box-shadow:1rpx 1rpx 4rpx 4rpx #00CD00; margin-top: 20upx; background-color: #ffffff;">
					<view class="uni-flex uni-column" style="width: 100%; height: 200rpx;">
						<text class="card-text">主站</text>
						<view class="uni-flex uni-row" style="margin-left: 20upx; ">
							<block v-for="(item, index) in tracesData" :key="index">
								<view class="uni-flex uni-column" style="margin-left: 20upx; ">
									<text>123</text>
									<image class="imgherd" src="/static/images/car.png"> </image>
								</view>
							</block>
						</view>



					</view>
				</view>

				<div class="con">
					<div class="total-wrap">

						<block v-for="(item, index) in tracesData" :key="index">
							<trackNode :is-first="index===tracesData.length-1" :is-newest="index===0" :is-main-node="item.isMainNode"
							 :node-data="item"></trackNode>
						</block>
					</div>
					
					

					<div class="total-wrap">

						<block v-for="(item, index) in tracesDataup" :key="index">
							<trackNodenew :is-first="index===tracesDataup.length-1" :is-newest="index===0" :is-main-node="item.isMainNode"
							 :node-data="item"></trackNodenew>
						</block>
					</div>
				</div>

				<view class="card-content-view" style="margin-bottom: 20upx;">
					<view class="uni-flex uni-column" style="width: 95%;  margin-left: 20rpx;margin-right: 20rpx;height: 200rpx;border-radius: 10rpx;box-shadow:1rpx 1rpx 4rpx 4rpx #00CD00; ">
						<view class="uni-flex uni-column" style="width: 100%; height: 200rpx;">
							<view class="uni-flex uni-row" style="margin-left: 20upx; ">
								<block v-for="(item, index) in tracesData" :key="index">
									<view class="uni-flex uni-column" style="margin-left: 20upx; ">
										<text>123</text>
										<image class="imgherd" src="/static/images/car.png"> </image>
									</view>
								</block>
							</view>
						</view>
						<text class="card-text">副站</text>
					</view>
				</view>


			</view>
			<view v-show="current === 1" style="background-color: #ffffff;">

				<view class="warp">
					<view class="box">

						<scroll-view scroll-x="true" class="bookshelf-content">
							<t-table @change="change">
								<t-tr>
									<t-th>班次</t-th>
									<t-th>车号</t-th>
									<t-th>方向</t-th>
									<t-th>计划/实际发车</t-th>
									<t-th>计划/实际到达</t-th>
									<t-th>驾驶员</t-th>
									<t-th>状态</t-th>
									<t-th>间隔</t-th>
									<t-th>时长</t-th>
									<t-th></t-th>
								</t-tr>
								<t-tr v-for="item in tableList" :key="item.id">
									<t-td>{{ item.timeOrder }}</t-td>
									<t-td>{{ item.busCode }}</t-td>
									<t-td>{{item.cmdType }}</t-td>
									<t-td>{{ item.planBegin}}/{{ item.realBegin}}</t-td>
									<t-td>{{ item.planEnd }}/{{ item.realEnd}}</t-td>
									<t-td>{{ item.driverCode }}</t-td>
									<t-td>{{ item.planRunState}}</t-td>
									<t-td>{{ item.runtime}}</t-td>
									<t-td>{{ item.runtime}}</t-td>
									<t-td align="left"><button @click="open('bottom',item)">编辑</button></t-td>
								</t-tr>
							</t-table>
						</scroll-view>
					</view>
				</view>
			</view>
		</view>

		<popup :open="openPopup" :position="position" :percent="percent" :background="background" @close="openPopup = false">
			<view style="padding:10px;">
				<!-- <button @touchstart="changeBgColor" @touchend="touchend">改变背景颜色(长按)</button>
				<button @touchstart="changeSize" @touchend="touchend" style="margin-top:10px">改变窗体大小(长按)</button>
				<button @click="showText = true" style="margin-top:10px">显示文本</button>
				<button type="primary" @click="reset()" style="margin-top:10px">复原</button> -->
				<button @click="pop()">新增车次</button>
				<button @click="popp()">修改车次</button>
				<button @click="poppp()">调整间隔</button>
				<button @click="shanchu()">减车</button>
				<button @click="fache()">发送发车指令</button>
				<button @click="send()">发送消息</button>
				<!--<button @click="quxiao()">取消发车</button> -->

				<button type="primary" @click="close">关闭</button>

			</view>
		</popup>

		<popup :open="openAdPopup" background="none" position="ad" @close="openAdPopup = false">
			<view style="text-align: center;">
				<image src="/static/logo.png" style="width: 500upx;height: 500upx;"></image>
			</view>
		</popup>

	</view>

</template>

<script>
	import trackNode from '../../components/trackNode.vue'
	import trackNodenew from '../../components/trackNodenew.vue'
	import zzxTabs from "@/components/zzx-tabs/zzx-tabs.vue"
	import tTable from '@/components/t-tablenew/t-table.vue';
	import tTh from '@/components/t-tablenew/t-th.vue';
	import tTr from '@/components/t-tablenew/t-tr.vue';
	import tTd from '@/components/t-tablenew/t-td.vue';
	import popup from '@/components/YYT-popup/YYT-popup.vue';
	var resquestJSOB = require('@/common/js/hy-request.js');
	var urlJSOB = require('@/common/js/hy-url.js');
	var stringUtil = require('@/common/js/hy-stringUtil.js');
	import UniSocket from "@i5920/uni-socket";
	var sss;
	var shuju;
	var carzhu=[];
	var carfu=[];

	var datastation = [];
	var datastationup = [];
	export default {
		components: {
			trackNode,
			zzxTabs,
			tTable,
			tTh,
			tTr,
			tTd,
			popup,
			trackNodenew
		},
		data() {
			return {
				timer: null,
				openPopup: false,
				position: '',
				background: '#fff',
				openAdPopup: false,
				percent: 0,
				showText: false,
				change: false,
				loopTimer: false,
				sizeSort: 'asc',
				items: ['运行图', '表格'],
				current: 0,
				img: "https://img-blog.csdnimg.cn/20200403192020260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpa2FpeWluNTUwODUz,size_16,color_FFFFFF,t_70",
				isshow: false,
				tracesData: [],
				tracesxiaData: [],
				carnum: [],

				tableList: [],
				carnumup: [],
				tracesDataup: [],
				tracesxiaDataup: []

			}
		},
		onNavigationBarButtonTap() {
			if (app!=null) {
				app.getLineStationItem(shuju)
			}
		},
		methods: {
			sendStationRequest() {
				var that = this;
				resquestJSOB.sendGetRequestJsonlky({
					url: "http://221.6.253.254:8070/sdhyschedule/PhoneQueryAction!getLineStation.shtml", //sdhyscheduleSQ/PhoneQueryAction!getLineRealTime.shtml",//
					//url : "http://221.6.253.254:8070/sdhyschedule/PhoneQueryAction!getLineStation.shtml?lineCode=102&sxx=1",
					data: {
						lineCode: "102",
					},
					successCallBack: function(res) {
						var array = [];
						array = res.stationList;
						datastation = [];
						datastationup = [];
						
						for (var i = 0; i < array.length; i++) {
						
							if (array[i].sxx == 0) {
								datastation.push(array[i])
							}else{
								datastationup.push(array[i])
							}
						}
						
						// console.log("*************")
						// console.log(datastation.length)
						// datastation = [];
						// datastation = array;
						// datastationup = [];
						// datastationup = array;
						// that.sendCarRequest();
						// that.sendCarRequestup();


					},
					failCallBack: function() {

					}
				});
			},
			
			sendCarRequestup() {
				var that = this;
				resquestJSOB.sendGetRequestJsonlky({
					url: "http://221.6.253.254:7006", //sdhyscheduleSQ/PhoneQueryAction!getLineRealTime.shtml",//
					//url : "http://221.6.253.254:8070/sdhyschedule/PhoneQueryAction!getLineStation.shtml",
					data: {
						lineCode: "102",
						sxx: "1"
					},
					successCallBack: function(res) {
						console.log(res)						
						that.carnumup = res;
						var up=datastationup;
						for (var i = 0; i < up.length; i++) {
								var mapup = up[i];
								if (i == up.length - 1) {
									mapup.islast = true,
										mapup.car = []
								} else {
									mapup.islast = false,
										mapup.car = []
								}
							}
							
							
							console.log(up.length);
							console.log("====================");
							console.log(that.carnumup.length);
						console.log(up[0].car);
							for (var i = 0; i < that.carnumup.length; i++) {
								console.log(that.carnumup[i].passStation);
								if(that.carnumup[i].passStation.toString()==0){
									up[that.carnumup[i].passStation.toString()].car.push(that.carnumup[i])
									
								}else{
									up[that.carnumup[i].passStation.toString()-1].car.push(that.carnumup[i])
									
								}
							
							}
							console.log("@@@@@@@@@@@");
							// console.log(that.up.length);
						that.tracesDataup=up;
					},
					failCallBack: function() {

					}
				});
			},
			
			
			sendCarRequest() {
				var that = this;
				resquestJSOB.sendGetRequestJsonlky({
					url: "http://221.6.253.254:7006", //sdhyscheduleSQ/PhoneQueryAction!getLineRealTime.shtml",//
					//url : "http://221.6.253.254:8070/sdhyschedule/PhoneQueryAction!getLineStation.shtml",
					data: {
						lineCode: "102",
						sxx: "0"
					},
					successCallBack: function(res) {
						that.carnum = res;
						var down=datastation;
						 // that.tracesData = [];
						 // tracesData=datastation;
						// that.tracesxiaData = [];
						// for (var i = 0; i < datastation.length; i++) {

						// 	if (datastation[i].sxx == 0) {
						// 		that.tracesData.push(datastation[i])
						// 	} else {
						// 		that.tracesxiaData.push(datastation[i])
						// 	}
						// }
						
						for (var i = 0; i < down.length; i++) {
							var map = down[i];
							if (i == down.length - 1) {
								map.islast = true,
									map.car = []
							} else {
								map.islast = false,
									map.car = []
							}
						}
						console.log(down.length);
						
						

						for (var i = 0; i < that.carnum.length; i++) {
							down[that.carnum[i].passStation.toString() - 1].car.push(that.carnum[i])
							
							//console.log(that.carnum[i].passStation.toString()-1);
						//	that.tracesData[that.carnum[i].passStation.toString() - 1].car.push(that.carnum[i])


						}
					that.tracesData=down;
					},
					failCallBack: function() {

					}
				});
			},
			sendDataRequest() {
				var that = this;
				resquestJSOB.sendGetRequestJsonlky({
					url: urlJSOB.getLineRealTime, //sdhyscheduleSQ/PhoneQueryAction!getLineRealTime.shtml",//
					//url : "http://221.6.253.254:8070/sdhyschedule/PhoneQueryAction!getLineStation.shtml",
					data: {
						lineCode: "52"
					},
					successCallBack: function(res) {
						that.tableList = res;
						for (var i = 0; i < that.tableList.length; i++) {
							console.log(that.tableList[i])

							if (that.tableList[i].cmdType == 1 || that.tableList[i].cmdType == 2 || that.tableList[i].cmdType == 4) {
								that.tableList[i].cmdType = '下行'
								var map = that.tableList[i]
								map.runtime = that.tableList[i].downRun
							} else {
								that.tableList[i].cmdType = '上行'
								var map = that.tableList[i]
								map.runtime = that.tableList[i].upRun
							}
						}



					},
					failCallBack: function() {

					}
				});
			},
			onClickItem(e) {
				if (this.current !== e.currentIndex) {
					this.current = e.currentIndex;
				}
			},
			setMydot() {
				this.$refs.mytabs.setDot(0)
			},
			removeMydot() {
				this.$refs.mytabs.removeDot(0);
			},


			getDetail(res) {
				console.log(res);
				this.isshow = true
			},
			open: function(position) {
				this.position = position;
				this.openPopup = true;
			},
			close: function(position) {
				this.position = position;
				this.openPopup = false;
			},
			touchend: function() {
				clearInterval(this.loopTimer)
			},
			changeBgColor: function(e) {
				clearInterval(this.loopTimer);
				this.loopTimer = setInterval(() => {
					let r = Math.floor(Math.random() * 256);
					let g = Math.floor(Math.random() * 256);
					let b = Math.floor(Math.random() * 256);
					let color = '#' + r.toString(16) + g.toString(16) + b.toString(16);
					this.background = color
				}, 300)
			},
			changeSize: function() {
				clearInterval(this.loopTimer);
				this.loopTimer = setInterval(() => {
					let percents = [40, 45, 50, 55, 60, 65, 70, 75, 80];

					if (this.percent <= 40) this.sizeSort = 'asc';
					if (this.percent >= 80) this.sizeSort = 'desc';
					if (this.sizeSort == 'desc') percents = percents.reverse();

					for (let i = 0; i <= percents.length; i++) {
						if (this.sizeSort == 'desc') {
							if (this.percent > percents[i]) {
								this.percent = percents[i];
								break;
							}
						} else {
							if (this.percent < percents[i]) {
								this.percent = percents[i];
								break;
							}
						}
					}
				}, 200)
			},
			reset: function() {
				this.percent = 0;
				this.background = '#fff';
				this.showText = false;
			},
			pop: function() {
				uni.navigateTo({

					url: '../Dispatching/Addcar',

				});
			},
			popp: function() {
				uni.navigateTo({
					url: '../Dispatching/Modificationcar',

				});
			},
			poppp: function() {
				uni.navigateTo({
					url: '../Dispatching/Interval',

				});
			},

			jiayou: function() {
				uni.navigateTo({
					url: '../Message/Getgas',

				});
			},

			weixiu: function() {
				uni.navigateTo({
					url: '../Message/weixiu',

				});
			},
			baoche: function() {
				uni.navigateTo({
					url: '../Message/baoche',

				});
			},
			shanchu: function() {
				uni.navigateTo({
					url: '../Dispatching/Lesscar',

				});
			},
			fache: function() {
				uni.navigateTo({
					url: '../Dispatching/Lesscar',
			
				});
			},
			send: function() {
				uni.navigateTo({
					url: '../Dispatching/sendmessage',
			
				});
			},
			

		},
		onLoad(options) {
			var that = this;
			that.sendDataRequest();
			that.sendStationRequest();
			window.clearInterval(that.timer);
			that.timer = setInterval(() => {
				
				that.sendCarRequest();
				that.sendCarRequestup();
			}, 5000);
			shuju = JSON.parse(options.data);
			// console.log(shuju)
		},
		onShow() {
			sss = new UniSocket({
				url: urlJSOB.getmessagesocket,
				timeout: 1 * 60 * 1000, // 心跳时间间隔
				isSendHeart: false, // 是否发送心跳
				isReconnection: true, // 是否断线重连
				reConnectTime: 3000, // 断线重连检测时间间隔
				params: { // 发送消息时如果时json则自动加上组合里面参数
					// token: this.$store.state.user.TOKEN
				},
				debug: process.env.NODE_ENV === "development", // debug
				onSocketOpen: header => {
					console.log("打开了")
				},
				onSocketMessage: data => {
					console.log("22222222222")
					console.log(data)
					
					if(data.type=="BusRequestROG"){
						var message;
						message=data.data;
						if(message[0].requestType=='105'){
							
							uni.showModal({
							    title: '提示',
							    content: '收到一条加油请求信息',
							    success: function (res) {
							        if (res.confirm) {
							            uni.navigateTo({
							            	url: '../Message/InformationCenter',
							            			
							            });
							        } else if (res.cancel) {
							            console.log('用户点击取消');
							        }
							    }
							});
						}else if(message[0].requestType=='107'){
						uni.showModal({
						    title: '提示',
						    content: '收到一条包车请求信息',
						    success: function (res) {
						        if (res.confirm) {
						           uni.navigateTo({
						           	url: '../Message/InformationCenter',
						           			
						           });
						        } else if (res.cancel) {
						            console.log('用户点击取消');
						        }
						    }
						});
					}else if(message[0].requestType=='103'){
						uni.showModal({
						    title: '提示',
						    content: '收到一条维修请求信息',
						    success: function (res) {
						        if (res.confirm) {
						            uni.navigateTo({
						            	url: '../Message/InformationCenter',
						            			
						            });
						        } else if (res.cancel) {
						            console.log('用户点击取消');
						        }
						    }
						});
					}
						
					}else if(data.type=="BusIO"){
						
						// 	if(data.data.ioNo==0){
						// 		if(carzhu!=''){
						// 			if(data.data.ioData==1){//进厂
						// 				for(var i=0; i<carzhu.length;i++){
						// 					if(carzhu[i].busCode==data.data[0].busCode){
						// 						//存入的数据里面有这辆车
						// 					}else{
						// 						carzhu.push(data.data[0])
						// 					}
						// 				}
										
						// 			}else if(data.data.ioData==0){//出厂
						// 				for(var i=0; i<carzhu.length;i++){
						// 					if(carzhu[i].busCode==data.data[0].busCode){
						// 						//检查如果有这辆车 就出厂
												
						// 						for(var i=0; i<carzhu.length;i++){
						// 							if(carzhu[i].busCode==data.data[0].busCode){
						// 								//存入的数据里面有这辆车
						// 								carzhu.push(data.data[0])
														
														
						// 							}else{
														
						// 							}
												
												
						// 					}
										
						// 			}
						// 		}else {
						// 			if(data.data.ioData==0){
						// 				carzhu=data.data[0];
										
						// 			}
						// 		}
						// 	}else if(data.data.ioNo==1){
								
						// 	}
						
						
						
						
					}
					
					
				},
				onSocketError: res => {
					console.log("33333333333")
					console.log(res)
				},
				onSocketClose: res => {
					console.log("444444444")
					console.log(res)
				}
			});
			console.log("打开了");
			sss.initSocket();
		},
	 }
</script>

<style lang="scss" scoped>
	.card-text {
		color: #000000;
		font-size: 43rpx;
		font-weight: 700;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	,
	.card-textblack {
		color: #8f8f94;
		font-size: 33rpx;

		display: flex;
		justify-content: center;
		align-items: center;
	}

	,
	.total-wrap {
		width: 50vw;
		box-sizing: border-box;
		padding: 0rpx 10rpx 0rpx 0rpx;
		float: left;

		.logistics-title {
			height: 72rpx;
			box-sizing: border-box;
			padding: 36rpx 0 8rpx;
			line-height: 28rpx;
			color: #4B4B4B;
			font-size: 26rpx;
			font-family: 'PingFangSC-Medium';
			text-align: left;
		}

		.con {
			width: 100vw;
			height: 100vh;
			flex-direction: row;
			display: flex;
			float: left;
		}

		.drawer {
			width: 100%;
			display: flex;
			display: -webkit-flex;
			flex-direction: column;

			.setbox {
				position: fixed;
				z-index: 1000;
				left: 0px;
				right: 0px;
				width: 100%;
				height: 100%;
				background: rgba(51, 51, 51, 0.4);
				border-left: 1px solid #CFD8DC !important;
				box-shadow: 0px 3px 12px rgba(0, 0, 0, 0.12);
				-webkit-transition: all 0.3s ease;
				transition: all 0.3s ease;
				bottom: -100%;
			}

			.show {
				bottom: 0;
			}
		}

		.header {
			width: 100%;
			background: #FFFFFF;
			line-height: 40px;
			position: absolute;
			bottom: 0;
			border-top-left-radius: 5px;
			border-top-right-radius: 5px;
			border-bottom: 10px solid #FFFFFF;
		}

		.drawer-list-item {
			width: 100%;
			height: auto;
			border-bottom: 1px solid #EEEEEE;
		}

		.drawer-item {
			width: 95%;
			margin: 0 auto;
			display: flex;
			justify-content: space-between;
			font-size: 14px;
			color: #333333;

		}

		.content {
			text-align: center;
			height: 100%;
		}

		.warp {

			height: 100%;
		}

		.logo {
			height: 200upx;
			width: 200upx;
			margin-top: 200upx;
		}

		.title {
			font-size: 36upx;
			color: #8f8f94;
		}

		.content {
			padding: 0.1px;
			height: 100%;
		}

		.button {
			margin: 30upx;
		}

		.select button {
			margin-top: 40upx;
		}

		.title {
			font-size: 36upx;
			color: #8f8f94;
			text-align: center;
			margin: 20px 0 20px 0;
		}

		.content {
			padding: 0 40upx 0 40upx;
		}

		.card-content-view {
			background-color: #FFFFFF;

			margin-left: 20rpx;
			margin-right: 20rpx;
			height: 200rpx;
			border-radius: 10rpx;
			box-shadow: 0rpx 8rpx 8rpx #f4f9ff;

		}

	}

	,
	.imgherd {
		width: 35upx;
		height: 35upx;
		margin-top: 10upx;
		display: flex;
		justify-content: center;
		align-items: center;
	}
</style>
