<template>
	<view class="bg-white">

		<!-- <cLabel v-for="(e,i) in " title='text' v-model='form.text' :clear='true' @handRight='handTextRight' :flex='false' :dataText='form.text' mode='text'  rightIcon='cuIcon-close'   /> -->
		<cLabel :dataText='Linec' v-model='form.text' rightIcon='cuIcon-people' />
		<cLabel title='车辆自编号 : ' v-model='form.carno'  mode='idcard' :dataText='form.carno'  rightIcon='cuIcon-vipcard text-red'  />
		<cLabel title='发送信息 : ' :dataText='form.fangxiang' :selectList="selectListtype" v-model='form.fangxiang' mode='selector' />
		<button class="bg-blue" @tap="handSubmit">确定</button>
	</view>
</template>

<script>
	var check = require('@/common/checker.js')
	import cLabel from "@/components/c-label/c-label.vue"
	import cUpload from "@/components/c-upload/c-upload.vue"
	var resquestJSOB = require('@/common/js/hy-request.js');
	var urlJSOB = require('@/common/js/hy-url.js');
	var stringUtil = require('@/common/js/hy-stringUtil.js');
	var type;
	var zufufang;
	var Linem;
	export default {
		components: {
			cLabel,
			cUpload
		},
		data() {
			return {

				passState: 'cuIcon-attentionforbidfill text-gray',
				selectListtype: [{
						label: "两车之间间距过小通知后车",
						value: 160
					},
					{
						label: "两车之间间距过大通知前车",
						value: 161
					},
					{
						label: "站点考核时间已到提示音",
						value: 162
					},{
						label: "两车之间间距过小通知前车",
						value: 163
					},
					{
						label: "两车之间间距过大通知后车",
						value: 164
					},
					{
						label: "站点考核提前到达本站",
						value: 165
					},
					{
						label: "站点考核晚点到达本站",
						value: 166
					},
					{
						label: "站点考核下一站点考核时间通知",
						value: 167
					},
					{
						label: "预警串车通知",
						value: 168
					},
				],
				driver: '',
				userCode: '',
				downstationsta: '',
				downstationend: '',
				stationnamedownbeg: '',
				stationnamedownend: '',
				stationOrder1: '',
				stationOrder2: '',
				stationOrder3: '',
				stationOrder4: '',
				Linec: '',
				form: {
					yearMonthbeg: "",
					yearMonthend: '',
					timeadd: '',
					carno: '',
					fangxiang: '',
					timebeg: '',
					timeend: '',
				},
				rules: {
					text: [{
							checkType: 'phone',
							errorMsg: '请正确输入手机号码'
						},
						{
							checkType: 'maxMin',
							max: 11,
							min: 7,
							errorMsg: '长度介于 7-11 个字符'
						},
					],
					idcard: [{
							checkType: 'noempty',
							errorMsg: '不能为空'
						},
						{
							checkType: 'card',
							errorMsg: '请正确输入身份证号码'
						},
					]
				}
			}
		},
		methods: {
			handSubmit() {
				if(this.form.carno==''){
					uni.showToast({
						title:'车辆自编号不能为空',
						icon:"none"
					})
				}else if(this.form.fangxiang==''){
					uni.showToast({
						title:'发送消息不能为空',
						icon:"none"
					})
				}else{
					if(this.form.fangxiang=="两车之间间距过小通知后车"){
						zufufang=160;
					}else if(this.form.fangxiang=="两车之间间距过大通知前车"){
						zufufang=161;
					}else if(this.form.fangxiang=="站点考核时间已到提示音"){
						zufufang=162;
					}else if(this.form.fangxiang=="两车之间间距过小通知前车"){
						zufufang=163;
					}else if(this.form.fangxiang=="两车之间间距过大通知后车"){
						zufufang=164;
					}else if(this.form.fangxiang=="站点考核提前到达本站"){
						zufufang=165;
					}else if(this.form.fangxiang=="站点考核晚点到达本站"){
						zufufang=166;
					}else if(this.form.fangxiang=="站点考核晚点到达本站"){
						zufufang=167;
					}else if(this.form.fangxiang=="站点考核下一站点考核时间通知"){
						zufufang=168;
					}else if(this.form.fangxiang=="预警串车通知"){
						zufufang=169;
					}
					
					this.sendaddcar();
				}
				
			},
			
			sendaddcar(){
				
				resquestJSOB.sendGetRequestJson({
					url: urlJSOB.getsendmessage, 
					data: {
						lineCode: 11,
						busCode: this.form.carno,
						scheId: uni.getStorageSync("userCode"),//调度员号码
						msgType:zufufang
						
						
					},
					successCallBack: function(res) {
						console.log(res.success)
						console.log(res.msg)
						if(res.success==true){
							uni.showToast({
								title:'减车成功',
								
							})
						}else if(res.success==true){
							uni.showToast({
								title:'减车失败'+res.msg,
								icon:"none"
							})
						}
					
					},
					failCallBack: function(res) {
						console.log(res)
					}
				});
			},
			bindPersonChange: function(e) {
				uni.navigateTo({
					url: '../../../../constant/personnel/personnel'
				});
			},
			begstationdown: function(e) {
				uni.navigateTo({
					url: '../../../../Dispatching/StationList?state=1'
				});
			},

			endstationdown: function(e) {
				uni.navigateTo({
					url: '../../../../Dispatching/StationList?state=2'
				});
			},
			begstationup: function(e) {
				uni.navigateTo({
					url: '../../../../Dispatching/StationList?state=3'
				});
			},
			endstationup: function(e) {
				uni.navigateTo({
					url: '../../../../Dispatching/StationList?state=4'
				});
			}

		},
		onLoad(options) {
		Linem=options.Linecode;
		this.Linec=options.Linecode;
		},
	}
</script>
<style>
	.bg-blue {
		background-color: #007AFF;
		width: 70%;
		margin-top: 100rpx;
		color: #ffffff;
	}

	.item {
		display: flex;
		width: 100%;
		align-items: center;
		background-color: #FFFFFF;
		min-height: 100rpx;
	}

	.hourLine {
		height: 1rpx;
		width: 90%;
		background-color: #DCDCDC;
		margin-left: 20rpx;
		margin-right: 10rpx;
	}

	.itemName {
		height: 100rpx;
		width: 280rpx;
		display: flex;
		line-height: auto;
		font-size: 28rpx;
		align-items: center;
		margin-left: 20rpx;
		line-height: 150rpx;
		color: #000000;
	}

	.inputarea {
		display: block;
		width: auto;
		height: max-content;
		display: flex;
		flex-grow: 1;
		auto-height: true;
		color: #000000;
		font-size: 28rpx;
	}
</style>
